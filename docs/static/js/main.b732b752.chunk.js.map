{"version":3,"sources":["lib/requestService/requestService.js","components/Login/Login.js","features/OAuth/OAuth.js","features/Cards/Cards.js","components/Alert/Alert.js","App.js","index.js"],"names":["rootUrl","oAuthUrl","cardsUrl","parseResponse","resp","ok","json","then","Promise","reject","requestService","_oAuth2_access_token","url","headers","this","Authorization","resolve","fetch","method","data","JSON","stringify","body","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","encodeURI","username","password","_postEncodeURI","grant_type","client_id","client_secret","access_token","success","admin_password","_post","_get","name","isAdmin","from","to","Login","onSuccess","setAlert","useState","setUsername","setPassword","className","Paper","variant","Typography","TextField","label","value","onChange","target","type","Button","onClick","loginToWolke","title","error","catch","OAuth","registerUserName","setRegisterUserName","deleteUserName","setDeleteUserName","users","setUsers","getUsers","useCallback","getOAuthUsers","useEffect","registerOAuthUser","console","log","deleteOAuthUser","map","user","index","color","parseLangInput","input","split","Cards","setFrom","setTo","setIsAdmin","getCardsUsers","FormControlLabel","control","Checkbox","checked","prevState","registerCardsUser","deleteCardsUser","Alert","alert","reset","text","time","timeoutId","setTimeout","clearTimeout","open","errorMessage","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","length","message","Features","NONE","OAUTH2","CARDS","featureNames","Object","values","featureComponents","resetAlertValue","App","isAuthenticated","setIsAuthenticated","menuRef","setMenuRef","currentFeature","setCurrentFeature","FeatureComponent","handleMenuClose","event","stopPropagation","updatedFeature","innerText","includes","onLogoutSuccess","aria-controls","aria-haspopup","onPointerDown","currentTarget","Menu","anchorEl","keepMounted","Boolean","featureName","MenuItem","logout","adminPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b732b752.chunk.js","sourcesContent":["const rootUrl = process.env.NODE_ENV === 'development'\n    ? 'http://localhost'\n    : 'https://wolke.glencoden.de';\n\nconst oAuthUrl = `${rootUrl}/auth`;\nconst cardsUrl = `${rootUrl}/cards`;\n\nfunction parseResponse(resp) {\n    if (resp.ok) {\n        return resp.json();\n    }\n    return resp.json().then(json => Promise.reject(json));\n}\n\nfunction encodeURI(data) {\n    const formBody = [];\n    for (const key in data) {\n        const encodedKey = encodeURIComponent(key);\n        const encodedValue = encodeURIComponent(data[key]);\n        formBody.push(`${encodedKey}=${encodedValue}`);\n    }\n    return formBody.join('&');\n}\n\n\nclass RequestService {\n    _oAuth2_access_token = '';\n\n    _get(url = `${rootUrl}/test/auth`) {\n        const headers = {'Content-Type': 'application/json; charset=utf-8'};\n        if (this._oAuth2_access_token) {\n            headers.Authorization = `Bearer ${this._oAuth2_access_token}`;\n        }\n        return Promise.resolve()\n            .then(() => fetch(url, {\n                method: 'GET',\n                headers\n            }))\n            .then(parseResponse);\n    }\n\n    _post(url, data) {\n        const headers = {'Content-Type': 'application/json; charset=utf-8'};\n        if (this._oAuth2_access_token) {\n            headers.Authorization = `Bearer ${this._oAuth2_access_token}`;\n        }\n        return Promise.resolve()\n            .then(() => JSON.stringify(data))\n            .then(body => fetch(url, {\n                method: 'POST',\n                headers,\n                body\n            }))\n            .then(parseResponse);\n    }\n\n    _postEncodeURI(url, data) {\n        return Promise.resolve()\n            .then(() => encodeURI(data))\n            .then(body => fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' },\n                body\n            }))\n            .then(parseResponse);\n    }\n\n    loginToWolke({ username, password }) {\n        return this._postEncodeURI(`${oAuthUrl}/login`, { username, password, grant_type: 'password', client_id: null, client_secret: null })\n            .then(resp => {\n                if (!resp.access_token) {\n                    return {\n                        success: false\n                    };\n                }\n                this._oAuth2_access_token = resp.access_token;\n                return {\n                    success: true\n                };\n            });\n    }\n\n    getOAuthUsers({ admin_password }) {\n        return this._post(`${oAuthUrl}/get_all`, { admin_password });\n    }\n\n    registerOAuthUser({ username, password, admin_password }) {\n        return this._post(`${oAuthUrl}/register`, { username, password, admin_password, grant_type: 'password' });\n    }\n\n    deleteOAuthUser({ username, admin_password }) {\n        return this._post(`${oAuthUrl}/delete`, { username, admin_password, grant_type: 'password' }); // TODO do we need grant_type?\n    }\n\n    getCardsUsers() {\n        return this._get(`${cardsUrl}/all_users`);\n    }\n\n    registerCardsUser({ name, isAdmin, from, to, admin_password }) {\n        return this._post(`${cardsUrl}/upsert_user`, { name, isAdmin, from, to, admin_password });\n    }\n\n    deleteCardsUser({ name, admin_password }) {\n        return this._post(`${cardsUrl}/delete_user`, { name, admin_password });\n    }\n}\n\nexport const requestService = new RequestService();","import { useState } from 'react';\nimport { Button, Paper, TextField, Typography } from '@material-ui/core';\nimport { requestService } from '../../lib/requestService/requestService';\n\n\nfunction Login({ onSuccess, setAlert }) {\n    const [ username, setUsername ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    return (\n        <div className=\"feature-box\">\n            <Paper variant=\"outlined\" className=\"action-box\">\n                <div className=\"elements-box\">\n                    <Typography>\n                        Login\n                    </Typography>\n                    <TextField\n                        label=\"username\"\n                        value={username}\n                        onChange={({ target }) => setUsername(target.value)}\n                    />\n                    <TextField\n                        type=\"password\"\n                        label=\"password\"\n                        value={password}\n                        onChange={({ target }) => setPassword(target.value)}\n                    />\n                </div>\n                <div className=\"elements-box\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                            requestService.loginToWolke({\n                                username,\n                                password\n                            })\n                                .then(resp => {\n                                    if (!resp.success) {\n                                        setAlert({ title: 'Login failed', error: resp });\n                                        return;\n                                    }\n                                    onSuccess(password);\n                                })\n                                .catch(error => setAlert({ title: 'request error', error }));\n                        }}\n                    >\n                        Login\n                    </Button>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Login;","import { useState, useCallback, useEffect } from 'react';\nimport { Button, Paper, TextField, Typography } from '@material-ui/core';\nimport { requestService } from '../../lib/requestService/requestService';\n\n\nfunction OAuth({ setAlert }) {\n    const [ registerUserName, setRegisterUserName ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    const [ deleteUserName, setDeleteUserName ] = useState('');\n\n    const [ users, setUsers ] = useState([]);\n\n    const getUsers = useCallback(\n        () => {\n            requestService.getOAuthUsers()\n                .then(resp => {\n                    if (!resp.success) {\n                        setAlert({ title: 'Failed to get oAuth2 users', error: resp });\n                        return;\n                    }\n                    setUsers(resp.users);\n                })\n                .catch(error => setAlert({ title: 'request error', error }));\n        },\n        [ setAlert ]\n    );\n\n    useEffect(() => getUsers(), [ getUsers ]);\n\n    return (\n        <div className=\"feature-box\">\n            <Paper variant=\"outlined\" className=\"action-box\">\n                <div className=\"elements-box\">\n                    <Typography>\n                        Register OAuth2 User\n                    </Typography>\n                    <TextField\n                        label=\"name\"\n                        value={registerUserName}\n                        onChange={({ target }) => setRegisterUserName(target.value)}\n                    />\n                    <TextField\n                        label=\"password\"\n                        value={password}\n                        onChange={({ target }) => setPassword(target.value)}\n                    />\n                </div>\n                <div className=\"elements-box\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                            requestService.registerOAuthUser({\n                                username: registerUserName,\n                                password,\n                            })\n                                .then(resp => {\n                                    if (!resp.success) {\n                                        setAlert({ title: 'Failed to register oAuth2 user', error: resp });\n                                        return;\n                                    }\n                                    setRegisterUserName('');\n                                    setPassword('');\n                                    console.log(resp);// TODO remove dev code\n                                    setAlert({ title: 'Registered oAuth2 user' });\n                                    getUsers();\n                                })\n                                .catch(error => setAlert({ title: 'request error', error }));\n                        }}\n                    >\n                        Register\n                    </Button>\n                </div>\n            </Paper>\n            <Paper variant=\"outlined\" className=\"action-box\">\n                <div className=\"elements-box\">\n                    <Typography>\n                        Delete OAuth2 User\n                    </Typography>\n                    <TextField\n                        label=\"name\"\n                        value={deleteUserName}\n                        onChange={({ target }) => setDeleteUserName(target.value)}\n                    />\n                </div>\n                <div className=\"elements-box\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                            requestService.deleteOAuthUser({\n                                username: deleteUserName,\n                            })\n                                .then(resp => {\n                                    if (!resp.success) {\n                                        setAlert({ title: 'Failed to delete oAuth2 user', error: resp });\n                                        return;\n                                    }\n                                    setDeleteUserName('');\n                                    setAlert({ title: 'Deleted oAuth2 user' });\n                                    getUsers();\n                                })\n                                .catch(error => setAlert({ title: 'request error', error }));\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </div>\n            </Paper>\n            <Paper variant=\"outlined\" className=\"action-box\">\n                <div className=\"elements-box\">\n                    <Typography>\n                        All Users\n                    </Typography>\n                    {users.map((user, index) => (\n                        <Typography key={index} className=\"list-item\" color=\"textSecondary\" variant=\"caption\">\n                            {user.username}\n                        </Typography>\n                    ))}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default OAuth;","import { useState, useCallback, useEffect } from 'react';\nimport { Button, Checkbox, FormControlLabel, Paper, TextField, Typography } from '@material-ui/core';\nimport { requestService } from '../../lib/requestService/requestService';\n\nfunction parseLangInput(input) {\n    return input.split(', ');\n}\n\n\nfunction Cards({ setAlert }) {\n    const [ registerUserName, setRegisterUserName ] = useState('');\n    const [ from, setFrom ] = useState('');\n    const [ to, setTo ] = useState('');\n    const [ isAdmin, setIsAdmin ] = useState(false); // TODO this is an unused example\n\n    const [ deleteUserName, setDeleteUserName ] = useState('');\n\n    const [ users, setUsers ] = useState([]);\n\n    const getUsers = useCallback(\n        () => {\n            requestService.getCardsUsers()\n                .then(resp => {\n                    if (!resp.success) {\n                        setAlert({ title: 'Failed to get cards users', error: resp });\n                        return;\n                    }\n                    setUsers(resp.users);\n                })\n                .catch(error => setAlert({ title: 'request error', error }));\n        },\n        [ setAlert ]\n    );\n\n    useEffect(() => getUsers(), [ getUsers ]);\n\n    return (\n        <div className=\"feature-box\">\n            <Paper variant=\"outlined\" className=\"action-box\">\n                <div className=\"elements-box\">\n                    <Typography>\n                        Register Cards User\n                    </Typography>\n                    <TextField\n                        label=\"name\"\n                        value={registerUserName}\n                        onChange={({ target }) => setRegisterUserName(target.value)}\n                    />\n                    <TextField\n                        label=\"from\"\n                        value={from}\n                        onChange={({ target }) => setFrom(target.value)}\n                    />\n                    <TextField\n                        label=\"to\"\n                        value={to}\n                        onChange={({ target }) => setTo(target.value)}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox checked={isAdmin} onChange={() => setIsAdmin(prevState => !prevState)} name=\"checkedA\" />}\n                        label=\"is admin\"\n                    />\n                </div>\n                <div className=\"elements-box\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                            requestService.registerCardsUser({\n                                name: registerUserName,\n                                from: parseLangInput(from),\n                                to: parseLangInput(to),\n                                isAdmin\n                            })\n                                .then(resp => {\n                                    if (!resp.success) {\n                                        setAlert({ title: 'Failed to register cards user', error: resp });\n                                        return;\n                                    }\n                                    setRegisterUserName('');\n                                    setFrom('');\n                                    setTo('');\n                                    setIsAdmin(false);\n                                    setAlert({ title: `Registered cards user ${resp.user.name}` });\n                                    getUsers();\n                                })\n                                .catch(error => setAlert({ title: 'request error', error }));\n                        }}\n                    >\n                        Register\n                    </Button>\n                </div>\n            </Paper>\n            <Paper variant=\"outlined\" className=\"action-box\">\n                <div className=\"elements-box\">\n                    <Typography>\n                        Delete Cards User\n                    </Typography>\n                    <TextField\n                        label=\"name\"\n                        value={deleteUserName}\n                        onChange={({ target }) => setDeleteUserName(target.value)}\n                    />\n                </div>\n                <div className=\"elements-box\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                            requestService.deleteCardsUser({\n                                name: deleteUserName,\n                            })\n                                .then(resp => {\n                                    if (!resp.success) {\n                                        setAlert({ title: 'Failed to delete cards user', error: resp });\n                                        return;\n                                    }\n                                    setDeleteUserName('');\n                                    setAlert({ title: 'Deleted cards user' });\n                                    getUsers();\n                                })\n                                .catch(error => setAlert({ title: 'request error', error }));\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </div>\n            </Paper>\n            <Paper variant=\"outlined\" className=\"action-box\">\n                <div className=\"elements-box\">\n                    <Typography>\n                        All Users\n                    </Typography>\n                    {users.map((user, index) => (\n                        <Typography key={index} className=\"list-item\" color=\"textSecondary\" variant=\"caption\">\n                            {user.name}\n                        </Typography>\n                    ))}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Cards;","import { useEffect } from 'react';\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\n\nconst alertDefaultTime = 2;\n\n\nfunction Alert({ alert, reset }) {\n    const { title, text, error, time } = alert;\n\n    useEffect(() => {\n        if (!title && !text) {\n            return;\n        }\n        const timeoutId = setTimeout(reset, (error ? 60 : (time || alertDefaultTime)) * 1000);\n        return () => clearTimeout(timeoutId);\n    }, [ reset, title, text, error, time ]);\n\n    const open = !!title || !!text;\n\n    const errorMessage = [];\n    if (error) {\n        for (const key in error) {\n            const value = error[key];\n            if (typeof value === 'string' || typeof value === 'number') {\n                errorMessage.push(`${key}: ${value}`);\n            }\n        }\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClick={reset}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            {!!title && (\n                <DialogTitle id=\"alert-dialog-title\" className={error ? 'alert-error' : ''}>\n                    {title}\n                </DialogTitle>\n            )}\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                {!!text && (\n                    <Typography>\n                        {text}\n                    </Typography>\n                )}\n                {!!errorMessage.length && errorMessage.map((message, index) => (\n                    <Typography key={index}>\n                        {message}\n                    </Typography>\n                ))}\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default Alert;","import { useState } from 'react';\nimport './App.css';\nimport { Button, Menu, MenuItem } from '@material-ui/core';\nimport { requestService } from './lib/requestService/requestService';\nimport Login from './components/Login/Login';\nimport OAuth from './features/OAuth/OAuth';\nimport Cards from './features/Cards/Cards';\nimport Alert from './components/Alert/Alert';\n\nconst Features = {\n    NONE: 'none',\n    OAUTH2: 'oauth2',\n    CARDS: 'cards'\n};\n\nconst featureNames = Object.values(Features);\n\nconst featureComponents = {\n    [Features.NONE]: null,\n    [Features.OAUTH2]: OAuth,\n    [Features.CARDS]: Cards\n};\n\nconst resetAlertValue = () => ({ title: '', text: '', error: null });\n\n\nfunction App() {\n    const [ isAuthenticated, setIsAuthenticated ] = useState(false);\n    const [ menuRef, setMenuRef ] = useState(null);\n    const [ currentFeature, setCurrentFeature ] = useState(featureNames[0]);\n    const [ alert, setAlert ] = useState(resetAlertValue);\n\n    const FeatureComponent = featureComponents[currentFeature];\n\n    const handleMenuClick = event => {\n        setMenuRef(event.currentTarget);\n    };\n\n    const handleMenuClose = event => {\n        event.stopPropagation();\n        const updatedFeature = event.target.innerText;\n        if (featureNames.includes(updatedFeature)) {\n            setCurrentFeature(updatedFeature);\n        }\n        setMenuRef(null);\n    };\n\n    const onLoginSuccess = adminPassword => {\n        setIsAuthenticated(true);\n    }\n\n    const onLogoutSuccess = () => {\n        setAlert({ title: `You're logged out` });\n        setIsAuthenticated(false);\n    };\n\n    return (\n        <div className=\"App\">\n            {!isAuthenticated ? (\n                <Login\n                    onSuccess={onLoginSuccess}\n                    setAlert={setAlert}\n                />\n            ) : (\n                <>\n                    <div className=\"top-line\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-controls=\"simple-menu\"\n                            aria-haspopup=\"true\"\n                            onPointerDown={handleMenuClick}\n                        >\n                            {currentFeature}\n                        </Button>\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={menuRef}\n                            keepMounted\n                            open={Boolean(menuRef)}\n                        >\n                            {featureNames.map((featureName, index) => (\n                                <MenuItem key={index} onPointerDown={handleMenuClose}>\n                                    {featureName}\n                                </MenuItem>\n                            ))}\n                        </Menu>\n\n                        <Button\n                            variant=\"contained\"\n                            onClick={() => requestService.logout().then(onLogoutSuccess)}\n                        >\n                            Logout\n                        </Button>\n                    </div>\n\n                    {FeatureComponent && (\n                        <FeatureComponent setAlert={setAlert} />\n                    )}\n                </>\n            )}\n\n            <Alert alert={alert} reset={() => setAlert(resetAlertValue)} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}