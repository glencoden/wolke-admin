{"version":3,"sources":["lib/requestService/requestService.js","features/OAuth/OAuth.js","features/Cards/Cards.js","components/Login/Login.js","App.js","index.js"],"names":["rootUrl","oAuthUrl","cardsUrl","parseResponse","resp","ok","json","then","Promise","reject","requestService","_oAuth2_access_token","url","headers","this","Authorization","resolve","fetch","method","data","JSON","stringify","body","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","encodeURI","username","password","_postEncodeURI","grant_type","client_id","client_secret","access_token","success","admin_password","_post","_get","name","isAdmin","from","to","OAuth","adminPassword","useState","registerUserName","setRegisterUserName","setPassword","deleteUserName","setDeleteUserName","users","setUsers","useEffect","getOAuthUsers","console","log","className","Typography","TextField","label","value","onChange","target","Button","variant","onClick","registerOAuthUser","deleteOAuthUser","map","user","index","color","parseLangInput","input","split","Cards","setFrom","setTo","setIsAdmin","getCardsUsers","FormControlLabel","control","Checkbox","checked","prevState","registerCardsUser","deleteCardsUser","Login","onSuccess","setUsername","type","loginToWolke","Features","NONE","OAUTH2","CARDS","featureNames","Object","values","featureComponents","App","anchorRef","useRef","isAuthenticated","setIsAuthenticated","setAdminPassword","open","setOpen","selectedIndex","setSelectedIndex","currentFeature","FeatureComponent","handleClose","event","current","contains","ButtonGroup","ref","aria-label","size","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","MenuItem","disabled","selected","handleMenuItemClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a570ae5.chunk.js","sourcesContent":["const rootUrl = process.env.NODE_ENV === 'development'\n    ? 'http://localhost'\n    : 'https://wolke.glencoden.de';\n\nconst oAuthUrl = `${rootUrl}/auth`;\nconst cardsUrl = `${rootUrl}/cards`;\n\nfunction parseResponse(resp) {\n    if (resp.ok) {\n        return resp.json();\n    }\n    return resp.json().then(json => Promise.reject(json));\n}\n\nfunction encodeURI(data) {\n    const formBody = [];\n    for (const key in data) {\n        const encodedKey = encodeURIComponent(key);\n        const encodedValue = encodeURIComponent(data[key]);\n        formBody.push(`${encodedKey}=${encodedValue}`);\n    }\n    return formBody.join('&');\n}\n\n\nclass RequestService {\n    _oAuth2_access_token = '';\n\n    _get(url = `${rootUrl}/test/auth`) {\n        const headers = {'Content-Type': 'application/json; charset=utf-8'};\n        if (this._oAuth2_access_token) {\n            headers.Authorization = `Bearer ${this._oAuth2_access_token}`;\n        }\n        return Promise.resolve()\n            .then(() => fetch(url, {\n                method: 'GET',\n                headers\n            }))\n            .then(parseResponse);\n    }\n\n    _post(url, data) {\n        const headers = {'Content-Type': 'application/json; charset=utf-8'};\n        if (this._oAuth2_access_token) {\n            headers.Authorization = `Bearer ${this._oAuth2_access_token}`;\n        }\n        return Promise.resolve()\n            .then(() => JSON.stringify(data))\n            .then(body => fetch(url, {\n                method: 'POST',\n                headers,\n                body\n            }))\n            .then(parseResponse);\n    }\n\n    _postEncodeURI(url, data) {\n        return Promise.resolve()\n            .then(() => encodeURI(data))\n            .then(body => fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' },\n                body\n            }))\n            .then(parseResponse);\n    }\n\n    loginToWolke({ username, password }) {\n        return this._postEncodeURI(`${oAuthUrl}/login`, { username, password, grant_type: 'password', client_id: null, client_secret: null })\n            .then(resp => {\n                if (!resp.access_token) {\n                    return {\n                        success: false\n                    };\n                }\n                this._oAuth2_access_token = resp.access_token;\n                return {\n                    success: true\n                };\n            });\n    }\n\n    getOAuthUsers({ admin_password }) {\n        return this._post(`${oAuthUrl}/get_all`, { admin_password });\n    }\n\n    registerOAuthUser({ username, password, admin_password }) {\n        return this._post(`${oAuthUrl}/register`, { username, password, admin_password, grant_type: 'password' });\n    }\n\n    deleteOAuthUser({ username, admin_password }) {\n        return this._post(`${oAuthUrl}/delete`, { username, admin_password, grant_type: 'password' }); // TODO do we need grant_type?\n    }\n\n    getCardsUsers() {\n        return this._get(`${cardsUrl}/all_users`);\n    }\n\n    registerCardsUser({ name, isAdmin, from, to, admin_password }) {\n        return this._post(`${cardsUrl}/upsert_user`, { name, isAdmin, from, to, admin_password });\n    }\n\n    deleteCardsUser({ name, admin_password }) {\n        return this._post(`${cardsUrl}/delete_user`, { name, admin_password });\n    }\n}\n\nexport const requestService = new RequestService();","import { useEffect, useState } from 'react';\nimport { Button, TextField, Typography } from '@material-ui/core';\nimport { requestService } from '../../lib/requestService/requestService';\n\n\nfunction OAuth({ adminPassword }) {\n    const [ registerUserName, setRegisterUserName ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    const [ deleteUserName, setDeleteUserName ] = useState('');\n\n    const [ users, setUsers ] = useState([]);\n\n    useEffect(() => {\n        requestService.getOAuthUsers({ admin_password: adminPassword })\n            .then(resp => {\n                if (!resp.success) {\n                    console.log('something went wrong getting oAuth users');\n                    return;\n                }\n                setUsers(resp.users);\n            });\n    }, [ adminPassword ]);\n\n    return (\n        <>\n            <div className=\"center-column\">\n                <Typography className=\"title\">\n                    Register OAuth2 User\n                </Typography>\n                <TextField\n                    className=\"input-field\"\n                    label=\"name\"\n                    value={registerUserName}\n                    onChange={({ target }) => setRegisterUserName(target.value)}\n                />\n                <TextField\n                    className=\"input-field\"\n                    label=\"password\"\n                    value={password}\n                    onChange={({ target }) => setPassword(target.value)}\n                />\n                <Button\n                    className=\"cta-button\"\n                    variant=\"contained\"\n                    onClick={() => {\n                        requestService.registerOAuthUser({\n                            username: registerUserName,\n                            password,\n                            admin_password: adminPassword\n                        })\n                            .then(resp => console.log(resp));\n                    }}\n                >\n                    Register\n                </Button>\n            </div>\n            <div className=\"center-column\">\n                <Typography className=\"title\">\n                    Delete OAuth2 User\n                </Typography>\n                <TextField\n                    className=\"input-field\"\n                    label=\"name\"\n                    value={deleteUserName}\n                    onChange={({ target }) => setDeleteUserName(target.value)}\n                />\n                <Button\n                    className=\"cta-button\"\n                    variant=\"contained\"\n                    onClick={() => {\n                        requestService.deleteOAuthUser({\n                            username: deleteUserName,\n                            admin_password: adminPassword\n                        })\n                            .then(resp => console.log(resp));\n                    }}\n                >\n                    Delete\n                </Button>\n            </div>\n            <div className=\"center-column\">\n                <Typography className=\"title\">\n                    All Users\n                </Typography>\n                {users.map((user, index) => (\n                    <Typography key={index} className=\"title\" color=\"textSecondary\" variant=\"caption\">\n                        {user.username}\n                    </Typography>\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default OAuth;","import { useState, useEffect } from 'react';\nimport { Button, Checkbox, FormControlLabel, TextField, Typography } from '@material-ui/core';\nimport { requestService } from '../../lib/requestService/requestService';\n\nfunction parseLangInput(input) {\n    return input.split(', ');\n}\n\n\nfunction Cards({ adminPassword }) {\n    const [ registerUserName, setRegisterUserName ] = useState('');\n    const [ from, setFrom ] = useState('');\n    const [ to, setTo ] = useState('');\n    const [ isAdmin, setIsAdmin ] = useState(false); // TODO this is an unused example\n\n    const [ deleteUserName, setDeleteUserName ] = useState('');\n\n    const [ users, setUsers ] = useState([]);\n\n    useEffect(() => {\n        requestService.getCardsUsers()\n            .then(resp => {\n                if (!resp.success) {\n                    console.log('something went wrong getting cards users');\n                    return;\n                }\n                setUsers(resp.users);\n            });\n    }, []);\n\n    return (\n        <>\n            <div className=\"center-column\">\n                <Typography className=\"title\">\n                    Register Cards User\n                </Typography>\n                <TextField\n                    className=\"input-field\"\n                    label=\"name\"\n                    value={registerUserName}\n                    onChange={({ target }) => setRegisterUserName(target.value)}\n                />\n                <TextField\n                    className=\"input-field\"\n                    label=\"from\"\n                    value={from}\n                    onChange={({ target }) => setFrom(target.value)}\n                />\n                <TextField\n                    className=\"input-field\"\n                    label=\"to\"\n                    value={to}\n                    onChange={({ target }) => setTo(target.value)}\n                />\n                <FormControlLabel\n                    className=\"checkbox\"\n                    control={<Checkbox checked={isAdmin} onChange={() => setIsAdmin(prevState => !prevState)} name=\"checkedA\" />}\n                    label=\"is admin\"\n                />\n                <Button\n                    className=\"cta-button\"\n                    variant=\"contained\"\n                    onClick={() => {\n                        requestService.registerCardsUser({\n                            admin_password: adminPassword,\n                            name: registerUserName,\n                            from: parseLangInput(from),\n                            to: parseLangInput(to),\n                            isAdmin\n                        })\n                            .then(resp => console.log(resp));\n                    }}\n                >\n                    Register\n                </Button>\n            </div>\n            <div className=\"center-column\">\n                <Typography className=\"title\">\n                    Delete Cards User\n                </Typography>\n                <TextField\n                    className=\"input-field\"\n                    label=\"name\"\n                    value={deleteUserName}\n                    onChange={({ target }) => setDeleteUserName(target.value)}\n                />\n                <Button\n                    className=\"cta-button\"\n                    variant=\"contained\"\n                    onClick={() => {\n                        requestService.deleteCardsUser({\n                            admin_password: adminPassword,\n                            name: deleteUserName,\n                        })\n                            .then(resp => console.log(resp));\n                    }}\n                >\n                    Delete\n                </Button>\n            </div>\n            <div className=\"center-column\">\n                <Typography className=\"title\">\n                    All Users\n                </Typography>\n                {users.map((user, index) => (\n                    <Typography key={index} className=\"title\" color=\"textSecondary\" variant=\"caption\">\n                        {user.name}\n                    </Typography>\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default Cards;","import { useState } from 'react';\nimport { Button, TextField, Typography } from '@material-ui/core';\nimport { requestService } from '../../lib/requestService/requestService';\n\n\nfunction Login({ onSuccess }) {\n    const [ username, setUsername ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    return (\n        <div className=\"center-column\">\n            <Typography className=\"title\">\n                Login\n            </Typography>\n            <TextField\n                className=\"input-field\"\n                label=\"username\"\n                value={username}\n                onChange={({ target }) => setUsername(target.value)}\n            />\n            <TextField\n                type=\"password\"\n                className=\"input-field\"\n                label=\"password\"\n                value={password}\n                onChange={({ target }) => setPassword(target.value)}\n            />\n            <Button\n                className=\"cta-button\"\n                variant=\"contained\"\n                onClick={() => {\n                    requestService.loginToWolke({\n                        username,\n                        password\n                    })\n                        .then(resp => {\n                            if (!resp.success) {\n                                console.log('login failed', resp);\n                                return;\n                            }\n                            onSuccess(password);\n                        });\n                }}\n            >\n                Login\n            </Button>\n        </div>\n    );\n}\n\nexport default Login;","import { useRef, useState } from 'react';\nimport './App.css';\nimport { Button, ButtonGroup, ClickAwayListener, Grow, MenuItem, MenuList, Paper, Popper, TextField } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport OAuth from './features/OAuth/OAuth';\nimport Cards from './features/Cards/Cards';\nimport Login from './components/Login/Login';\n\nconst Features = {\n    NONE: 'none',\n    OAUTH2: 'oauth2',\n    CARDS: 'cards'\n};\n\nconst featureNames = Object.values(Features);\n\nconst featureComponents = {\n    [Features.NONE]: null,\n    [Features.OAUTH2]: OAuth,\n    [Features.CARDS]: Cards\n};\n\n\nfunction App() {\n    const anchorRef = useRef(null);\n\n    const [ isAuthenticated, setIsAuthenticated ] = useState(false);\n    const [ adminPassword, setAdminPassword ] = useState('');\n    const [ open, setOpen ] = useState(false);\n    const [ selectedIndex, setSelectedIndex ] = useState(0);\n\n    const currentFeature = featureNames[selectedIndex];\n    const FeatureComponent = featureComponents[currentFeature];\n\n    const handleMenuItemClick = (event, index) => {\n        setSelectedIndex(index);\n        setOpen(false);\n    };\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    if (!isAuthenticated) {\n        return (\n            <div className=\"App center-column\">\n                <Login\n                    onSuccess={adminPassword => {\n                        setAdminPassword(adminPassword);\n                        setIsAuthenticated(true);\n                    }}\n                />\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"App center-column\">\n            <div className=\"top-line\">\n                <TextField\n                    label=\"admin password\"\n                    type=\"password\"\n                    value={adminPassword}\n                    onChange={({ target }) => setAdminPassword(target.value)}\n                />\n                <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\n                    <Button>\n                        {featureNames[selectedIndex]}\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        size=\"small\"\n                        aria-controls={open ? 'split-button-menu' : undefined}\n                        aria-expanded={open ? 'true' : undefined}\n                        aria-label=\"select merge strategy\"\n                        aria-haspopup=\"menu\"\n                        onClick={handleToggle}\n                    >\n                        <ArrowDropDownIcon />\n                    </Button>\n                </ButtonGroup>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{\n                                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                            }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList id=\"split-button-menu\">\n                                        {featureNames.map((name, index) => (\n                                            <MenuItem\n                                                key={name}\n                                                disabled={!adminPassword}\n                                                selected={index === selectedIndex}\n                                                onClick={(event) => handleMenuItemClick(event, index)}\n                                            >\n                                                {name}\n                                            </MenuItem>\n                                        ))}\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n\n            {FeatureComponent && (\n                <FeatureComponent adminPassword={adminPassword} />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}