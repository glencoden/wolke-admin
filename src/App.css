* {
    box-sizing: border-box;
}

:root {
    --space-s: 20px;
    --space-m: 40px;
    --space-l: 60px;
    --feature-box-grid-gap: var(--space-m);
    --action-box-size: 282px;
    --max-content-width: calc((3 * var(--action-box-size)) + (2 * var(--feature-box-grid-gap)));
}

.App {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: var(--space-m) 0 calc(2 * var(--space-l));
}

.top-line {
    display: flex;
    justify-content: space-between;
    width: calc(var(--action-box-size) - var(--space-s));
    z-index: 100;
    margin-bottom: var(--space-m);
}

.feature-box {
    display: grid;
    grid-gap: var(--feature-box-grid-gap);
    grid-template-columns: repeat(auto-fit, minmax(var(--action-box-size), 1fr));
    max-width: min(calc(100% - (2 * var(--space-m))), var(--max-content-width));
}

.feature-box > * {
    padding: var(--space-s);
}

.action-box {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: var(--action-box-size);
    min-height: var(--action-box-size);
    padding-top: calc(-1 * var(--space-s));
}

.action-box > * {
    margin-top: var(--space-s);
}

.elements-box {
    display: flex;
    flex-direction: column;
}

.elements-box > * {
    margin-bottom: var(--space-s) !important;
}

/* break when more than one action-box column will fit (> 2 * action-box-size + 3 * feature-box-grid-gap)  */
@media only screen and (min-width: 684px) {
    .App {
        padding: var(--space-l) 0 calc(2 * var(--space-l));
    }

    .top-line {
        margin-bottom: var(--space-l);
    }

    .feature-box > *:nth-child(even) {
        justify-self: start;
    }

    .feature-box > *:nth-child(odd) {
        justify-self: end;
    }
}